[build-system]
requires      = ["hatchling"]
build-backend = "hatchling.build"

[project]
name = "randofetch"
dynamic = ["version"]
description = ''
readme = "README.md"
requires-python = ">=3.10"
license = "MIT"
keywords = []
authors = [{ name = "Mark Plagge", email = "plaggm@icloud.com" }]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = ["click", "platformdirs", 'ruamel.yaml', 'tqdm']


Documentation = "https://github.com/mplagge/randofetch#readme"
Issues        = "https://github.com/mplagge/randofetch/issues"
Source        = "https://github.com/mplagge/randofetch"

[project.scripts]
randofetch = "randofetch.cli:randofetch"

[tool.hatch.version]
path = "src/randofetch/__about__.py"

[tool.hatch.envs.default]
dependencies = ["click", "platformdirs", "ruamel.yaml", "tqdm"]

[tool.hatch.envs.gui]
features           = ['gui']
extra-dependencies = ["kivy"]
[project.optional-dependencies]
gui = ['kivy']

#[tool.hatch.envs.test]
#dependencies = ["pytest", "coverage[toml]>=6.5"]

#[tool.hatch.envs.default.scripts]
#test       = "pytest {args:tests}"
#test-cov   = "coverage run -m pytest {args:tests}"
#cov-report = ["- coverage combine", "coverage report"]
#cov        = ["test-cov", "cov-report"]


[[tool.hatch.envs.all.matrix]]
python = ["3.10", "3.11", "3.12"]

[tool.hatch.envs.types]
dependencies = ["mypy>=1.0.0"]
[tool.hatch.envs.types.scripts]
check = "mypy --install-types --non-interactive {args:src/randofetch tests}"

#[tool.coverage.run]
#source_pkgs = ["randofetch", "tests"]
#branch      = true
#parallel    = true
#omit        = ["src/randofetch/__about__.py"]
#
#[tool.coverage.paths]
#randofetch = ["src/randofetch", "*/randofetch/src/randofetch"]
#tests      = ["tests", "*/randofetch/tests"]
#
#[tool.coverage.report]
#exclude_lines = ["no cov", "if __name__ == .__main__.:", "if TYPE_CHECKING:"]
#
